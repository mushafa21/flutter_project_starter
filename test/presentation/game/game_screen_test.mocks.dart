// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_project_starter/test/presentation/game/game_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_project_starter/data/network/data_state.dart' as _i2;
import 'package:flutter_project_starter/domain/models/game_model.dart' as _i5;
import 'package:flutter_project_starter/domain/repository/game_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GameRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGameRepository extends _i1.Mock implements _i3.GameRepository {
  MockGameRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DataState<List<_i5.GameModel>>> getGames({
    required int? page,
    required String? search,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getGames, [], {#page: page, #search: search}),
            returnValue: _i4.Future<_i2.DataState<List<_i5.GameModel>>>.value(
              _FakeDataState_0<List<_i5.GameModel>>(
                this,
                Invocation.method(#getGames, [], {
                  #page: page,
                  #search: search,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.DataState<List<_i5.GameModel>>>);

  @override
  _i4.Future<_i2.DataState<_i5.GameModel>> getGameDetail({required int? id}) =>
      (super.noSuchMethod(
            Invocation.method(#getGameDetail, [], {#id: id}),
            returnValue: _i4.Future<_i2.DataState<_i5.GameModel>>.value(
              _FakeDataState_0<_i5.GameModel>(
                this,
                Invocation.method(#getGameDetail, [], {#id: id}),
              ),
            ),
          )
          as _i4.Future<_i2.DataState<_i5.GameModel>>);

  @override
  _i4.Future<List<_i5.GameModel>> getFavoritedGames() =>
      (super.noSuchMethod(
            Invocation.method(#getFavoritedGames, []),
            returnValue: _i4.Future<List<_i5.GameModel>>.value(
              <_i5.GameModel>[],
            ),
          )
          as _i4.Future<List<_i5.GameModel>>);

  @override
  _i4.Future<void> addFavoriteGame({required _i5.GameModel? game}) =>
      (super.noSuchMethod(
            Invocation.method(#addFavoriteGame, [], {#game: game}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> removeFavoriteGame({required int? id}) =>
      (super.noSuchMethod(
            Invocation.method(#removeFavoriteGame, [], {#id: id}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> isGameFavorited({required int? id}) =>
      (super.noSuchMethod(
            Invocation.method(#isGameFavorited, [], {#id: id}),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
